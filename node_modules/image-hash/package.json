{
  "_args": [
    [
      {
        "raw": "image-hash@^2.0.0",
        "scope": null,
        "escapedName": "image-hash",
        "name": "image-hash",
        "rawSpec": "^2.0.0",
        "spec": ">=2.0.0 <3.0.0",
        "type": "range"
      },
      "/home/siva-m/navi"
    ]
  ],
  "_from": "image-hash@^2.0.0",
  "_hasShrinkwrap": false,
  "_id": "image-hash@2.0.0",
  "_location": "/image-hash",
  "_nodeVersion": "10.9.0",
  "_npmOperationalInternal": {
    "host": "s3://npm-registry-packages",
    "tmp": "tmp/image-hash_2.0.0_1537795100294_0.8687860212592631"
  },
  "_npmUser": {
    "name": "danm",
    "email": "daniel.morrison@bbc.co.uk"
  },
  "_npmVersion": "6.2.0",
  "_phantomChildren": {},
  "_requested": {
    "raw": "image-hash@^2.0.0",
    "scope": null,
    "escapedName": "image-hash",
    "name": "image-hash",
    "rawSpec": "^2.0.0",
    "spec": ">=2.0.0 <3.0.0",
    "type": "range"
  },
  "_requiredBy": [
    "/"
  ],
  "_resolved": "https://registry.npmjs.org/image-hash/-/image-hash-2.0.0.tgz",
  "_shasum": "4c4ef179c81af5a349bd38f45e29eb551902c10e",
  "_shrinkwrap": null,
  "_spec": "image-hash@^2.0.0",
  "_where": "/home/siva-m/navi",
  "author": {
    "name": "Daniel Morrison",
    "email": "daniel.morrison@bbc.co.uk"
  },
  "bugs": {
    "url": "https://github.com/danm/image-hash/issues"
  },
  "dependencies": {
    "file-type": "^9.0.0",
    "jpeg-js": "^0.2.0",
    "pngjs": "^3.3.3",
    "request": "^2.81.0"
  },
  "description": "Create a hash from an image",
  "devDependencies": {
    "chai": "^4.1.2",
    "eslint": "^5.6.0",
    "eslint-config-airbnb-base": "^13.1.0",
    "eslint-plugin-import": "^2.14.0",
    "mocha": "^5.2.0"
  },
  "directories": {},
  "dist": {
    "integrity": "sha512-1knAwHlIxG20JJz16ucBIfn73NCkOWijSqUrrGcIEgMF0XP2mgKUt359OKXOrrJ2iPFXohU/O83vd2zOKVg4Eg==",
    "shasum": "4c4ef179c81af5a349bd38f45e29eb551902c10e",
    "tarball": "https://registry.npmjs.org/image-hash/-/image-hash-2.0.0.tgz",
    "fileCount": 19,
    "unpackedSize": 1388391,
    "npm-signature": "-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.4\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJbqOQdCRA9TVsSAnZWagAAYZEQAIVNgOMoyx9uMcnTzeFO\nBi3dqFYQRaHTk4yb3p1u9KIyIECjTiAsdK0uZXaZtjlPUAfpomN/UTSs6b2C\n3nqFtFRDrDEbdWXFZJPVy5PbXXuky/LeuqqnertoQ82+zHtdkVSW+zv3Mc1P\nn1rGJogzfnEYD19VkBaWDxgk+2p1c2bs81JQsLb8lPWQPtO8usZC1L3NJzb8\nt+ZuDALUyHvyZB8Vqo+dn3WI83bvX1deqIrJvZa1IB9q8EIQfhCGV0o2JYF3\nq+HTbSrC/rSIlvDpsnWBCmfrQYP/ZuUFa0Aztc4meAvqw9Wm0YzWR2rUHn29\ntIOq0cRrLDdkqzchGgzB6I60qtln7bA26oT9orvBBnbDho/koeZ7E2NUltdI\nXbM39KHnIsO9tjjsV1MLY3s/VABWr/cksH3odg73P0Ot5jnDG2IHhotBsJ6a\nQVp1xlBA6pHC4YivKSKjPmlgZhP/yUHLTltdH1gh8CdCsJrBamCMBIFyUKRj\nqUoK0E05qlJE1sk23T8X/9AE+ruYL1qrWB8xbWTLw1Cb0WAvOxO2o0+vDMRB\nlJEcWsD/SUGCBQtfijwwMVwnJ+eL27fCr8bFEre8HvUlUplQFBclDsY7/McS\nlCZOUDvAN6G7bhFuUySOZmY340KL3gbj3u3xNQqgr9aiugyGROsnLINEC5Ep\nRoPG\r\n=FGTA\r\n-----END PGP SIGNATURE-----\r\n"
  },
  "gitHead": "c03e13fd2f73a1323e509acf6a5d3bbe73717595",
  "homepage": "https://github.com/danm/image-hash#readme",
  "keywords": [
    "phash",
    "hash",
    "image hash",
    "perceptual hash"
  ],
  "license": "MIT",
  "main": "index.js",
  "maintainers": [
    {
      "name": "danm",
      "email": "daniel.morrison@bbc.co.uk"
    }
  ],
  "name": "image-hash",
  "optionalDependencies": {},
  "readme": "# image-hash\nA wrapper around [block-hash](https://github.com/commonsmachinery/blockhash-js) to easily hash a local or remote file with Node.\n\n## Install\n```bash\nnpm i -S image-hash\n```\n\n## Use\n```javascript\nconst imageHash = require('image-hash');\n\n// remote file simple\nimageHash('https://ichef-1.bbci.co.uk/news/660/cpsprodpb/7F76/production/_95703623_mediaitem95703620.jpg', 16, true, (error, data) => {\n  if (error) throw error;\n  console.log(data);\n  // 0773063f063f36070e070a070f378e7f1f000fff0fff020103f00ffb0f810ff0\n});\n\n// remote file with requestjs config object\nconst config = {\n  uri: 'https://ichef-1.bbci.co.uk/news/660/cpsprodpb/7F76/production/_95703623_mediaitem95703620.jpg'\n};\n\nimageHash(config, 16, true, (error, data) => {\n  if (error) throw error;\n  console.log(data);\n  // 0773063f063f36070e070a070f378e7f1f000fff0fff020103f00ffb0f810ff0\n});\n\n//local file\nimageHash('./_95695590_tv039055678.jpg', 16, true, (error, data) => {\n  if (error) throw error;\n  console.log(data);\n  // 0773063f063f36070e070a070f378e7f1f000fff0fff020103f00ffb0f810ff0\n});\n```\n\n## API\n```\n// name\nimageHash(location, bits, precise, callback)\n\n// types\nimageHash(string|object, int, bool, function)\n```\n\n### Image-Hash Arguments\n\nArgument | Type | Description | Mandatory | Example\n--- | --- | --- | --- | ---\nlocation | `object` or `string` | A [RequestJS Object](https://github.com/request/request#requestoptions-callback) or `String` with a valid url or file location | Yes | see above\nbits | `int` | The number of bits in a row. The more bits, the more unique the hash. | Yes | 8\nprecise | `bool` | Whether a precision algorithm is used. `true` Precise but slower, non-overlapping blocks. `false` Quick and crude, non-overlapping blocks. Method 2 is recommended as a good tradeoff between speed and good matches on any image size. The quick ones are only advisable when the image width and height are an even multiple of the number of blocks used. | Yes | `true`\ncallback | `function` | A function with `error` and `data` arguments - see below |  \n\n### Callback Arguments\n\nArgument | Type | Description\n--- | --- | --- | --- | ---\nerror | `Error Object` or `null` | If a run time error is detected this will be an `Error Object`, otherwise `null`\ndata | `string` or `null` | If there is no run time error, this be will be your hashed result, otherwise `null` \n\n## Testing\nI will get some Mocha tests soon!\n\n## Credit\n\nThe hard bit of this comes with thanks from [commonsmachinery](https://github.com/commonsmachinery) for [blockhash-js](https://github.com/commonsmachinery/blockhash-js)\n\n## License\n\nDistributed under an MIT license\n\n",
  "readmeFilename": "README.md",
  "repository": {
    "type": "git",
    "url": "git+https://github.com/danm/image-hash.git"
  },
  "scripts": {
    "test": "mocha"
  },
  "version": "2.0.0"
}
